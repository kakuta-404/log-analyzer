services:
  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # this is the address that kafka allows others to connect via it
      # set kafka if you are connecting via docker and set localhost if you are producing via java
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  clickhouse:
    image: bitnami/clickhouse:25.5.1
    ports:
      - "8123:8123"
      - "9000:9000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  cassandra:
    image: bitnami/cassandra:5.0.4
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_PASSWORD_SEEDER: "no"
      CASSANDRA_AUTHENTICATOR: "AllowAllAuthenticator"
      CASSANDRA_AUTHORIZER: "AllowAllAuthorizer"
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe keyspaces'"]
      interval: 30s
      timeout: 10s
      retries: 5

  cockroachdb:
    image: cockroachdb/cockroach:v24.3.14
    ports:
      - "26257:26257"
      - "8082:8080"
    command: start-single-node --insecure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  log-generator:
    build:
      context: .
      dockerfile: Dockerfile.template
      args:
        - MODULE=log-generator
    ports:
      - "8084:8080"
    environment:
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  log-drain:
    build:
      context: .
      dockerfile: Dockerfile.template
      args:
        - MODULE=log-drain
    environment:
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  clickhouse-writer:
    build:
      context: .
      dockerfile: Dockerfile.template
      args:
        - MODULE=clickhouse-writer
    environment:
      - KAFKA_BROKERS=kafka:9092
      - CLICKHOUSE_HOST=clickhouse
    depends_on:
      kafka:
        condition: service_healthy
      clickhouse:
        condition: service_healthy

  cassandra-writer:
    build:
      context: .
      dockerfile: Dockerfile.template
      args:
        - MODULE=cassandra-writer
    environment:
      - KAFKA_BROKERS=kafka:9092
      - CASSANDRA_HOST=cassandra
    depends_on:
      kafka:
        condition: service_healthy
      cassandra:
        condition: service_healthy

  rest-api:
    build:
      context: .
      dockerfile: Dockerfile.template
      args:
        - MODULE=rest-api
    ports:
      - "8081:8081"
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CASSANDRA_HOST=cassandra
      - COCKROACH_HOST=cockroachdb
    depends_on:
      clickhouse:
        condition: service_healthy
      cassandra:
        condition: service_healthy
      cockroachdb:
        condition: service_healthy

  gui:
    build:
      context: .
      dockerfile: Dockerfile.template
      args:
        - MODULE=gui
    ports:
      - "8083:8083"
    environment:
      - REST_API_HOST=rest-api
    depends_on:
      rest-api:
        condition: service_started
