# ---------- Stage 1: Build ----------
FROM golang:1.24.2-alpine AS builder

ARG MODULE

ENV GOPROXY=https://goproxy.cn,direct
ENV GO111MODULE=on

# Set WORKDIR to /go/src/app so relative paths match
WORKDIR /go/src/${MODULE}

# Copy go.mod and go.sum
COPY ${MODULE}/go.mod ${MODULE}/go.sum ./
COPY common/go.mod ../common/go.mod

# Download deps
RUN go mod download

# Copy the rest
COPY ${MODULE}/ ./
COPY common/ ../common/

RUN go build -o /app .

# ---------- Stage 2: Runtime ----------
FROM alpine:latest

WORKDIR /app

COPY --from=builder /app .

# Copy UI assets if they exist (silent if not present)
RUN mkdir -p ./ui/ && \
    { [ -d /go/src/ui/ ] && cp -r /go/src/ui/* ./ui/ || true; }

CMD ["./app"]